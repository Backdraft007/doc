
:breadcrumbs: <a href="../../index.html">Startseite</a> / <a href="../../index.html#hardware">Hardware</a> / RS232 Bricklet
:FIXME_shoplink: ../../../shop/bricklets/rs232-bricklet.html

.. include:: RS232.substitutions
   :start-after: >>>substitutions
   :end-before: <<<substitutions

.. _rs232_bricklet:

RS232 Bricklet
==============

.. raw:: html

	{% from "macros.html" import tfdocstart, tfdocimg, tfdocend %}
	{{
	    tfdocstart("Bricklets/bricklet_rs232_tilted1_350.jpg",
	               "Bricklets/bricklet_rs232_tilted1_600.jpg",
	               "RS232 Bricklet")
	}}
	{{
	    tfdocimg("Bricklets/bricklet_rs232_tilted2_100.jpg",
	             "Bricklets/bricklet_rs232_tilted2_600.jpg",
	             "RS232 Bricklet")
	}}
	{{
	    tfdocimg("Bricklets/bricklet_rs232_tilted3_100.jpg",
	             "Bricklets/bricklet_rs232_tilted3_600.jpg",
	             "RS232 Bricklet")
	}}
	{{
	    tfdocimg("Bricklets/bricklet_rs232_horizontal_100.jpg",
	             "Bricklets/bricklet_rs232_horizontal_600.jpg",
	             "RS232 Bricklet")
	}}
	{{
	    tfdocimg("Cases/bricklet_rs232_case_built_up1_100.jpg",
	             "Cases/bricklet_rs232_case_built_up1_600.jpg",
	             "RS232 Bricklet im Gehäuse")
	}}
	{{
	    tfdocimg("Cases/bricklet_rs232_case_built_up2_100.jpg",
	             "Cases/bricklet_rs232_case_built_up2_600.jpg",
	             "RS232 Bricklet im Gehäuse")
	}}
	{{
	    tfdocimg("Bricklets/bricklet_rs232_brickv_100.jpg",
	             "Bricklets/bricklet_rs232_brickv.jpg",
	             "RS232 Bricklet im Brick Viewer")
	}}
	{{
	    tfdocimg("Dimensions/rs232_bricklet_dimensions_100.png",
	             "Dimensions/rs232_bricklet_dimensions_600.png",
	             "Umriss und Bohrplan")
	}}
	{{ tfdocend() }}

.. note::
  Diese Bricklet ist noch in Entwicklung!


Features
--------

* Sendet und empfängt serielle Daten
* Bietet RS-232 und UART-TTL Schnittstelle
* Einstellbare Baudrate, Parität, Stopbits, Wortlänge und Flusskontrolle


.. _rs232_bricklet_description:

Beschreibung
------------

Mit dem RS232 :ref:`Bricklet <primer_bricklets>` können
:ref:`Bricks <primer_bricks>` seriell Daten mit `RS-232
<https://de.wikipedia.org/wiki/RS-232>`__ und 3,3V TTL Signalpegel
senden und empfangen, um mit anderen seriellen Geräten zu kommunizieren.


Technische Spezifikation
------------------------

================================  ============================================================
Eigenschaft                       Wert
================================  ============================================================
Stromverbrauch                    25mW (5mA bei 5V, Idle)
--------------------------------  ------------------------------------------------------------
--------------------------------  ------------------------------------------------------------
Baudrate                          300 - 230400baud
Parität                           keine / ungerade / gerade / erzwungen 1 / erzwungen 0
Stoppbits                         1 / 2
Wortlänge                         5 / 6 / 7 / 8
Flusskontrolle                    Software / Hardware / keine
--------------------------------  ------------------------------------------------------------
--------------------------------  ------------------------------------------------------------
Abmessungen (B x T x H)           45 x 35 x 17mm (1,77 x 1,38 x 0,67")
Gewicht                           18g
================================  ============================================================


Ressourcen
----------

* Schaltplan (`Download <https://github.com/Tinkerforge/rs232-bricklet/raw/master/hardware/rs232-schematic.pdf>`__)
* Umriss und Bohrplan (`Download <../../_images/Dimensions/rs232_bricklet_dimensions.png>`__)
* Quelltexte und Platinenlayout (`Download <https://github.com/Tinkerforge/rs232-bricklet/zipball/master>`__)


Anschlussmöglichkeiten
----------------------

Das RS232 Bricklet kann auf drei verschiedene Weisen mit seriellen Geräten
verbunden werden: klassischer D-Sub 9 Stecker, 5er Anschlussklemmenblock oder
5er Stiftleiste. Es kann aber nur eine dieser Anschlussmöglichkeiten zur
gleichen Zeit genutzt werden.

.. image:: /Images/Bricklets/bricklet_rs232_horizontal_350.jpg
   :scale: 100 %
   :alt: RS232 Bricklet Steckerbelegung
   :align: center
   :target: ../../_images/Bricklets/bricklet_industrial_rs232_horizontal_1200.jpg

D-Sub 9 Stecker
^^^^^^^^^^^^^^^

Der D-Sub 9 Stecker verwendet die `RS-232 <https://de.wikipedia.org/wiki/RS-232>`__
Signalpegel. Um diesen Anschluss verwenden zu können müssen der RX1 und RX2 Pin
der Stiftleiste mit einem Jumper verbunden werden.

Der Anschluss verwendet den folgenden Teil der RS-232 Standardbelegung:

=== ================= ===
Pin Funktion
=== ================= ===
2   Eingehende Daten  RX
3   Ausgehende Daten  TX
5   Masse             GND
7   Sendeanforderung  RTS
8   Sendeerlaubnis    CTS
=== ================= ===

Anschlussklemmenblock
^^^^^^^^^^^^^^^^^^^^^

Der 5er Anschlussklemmenblock stellt die gleichen fünf RS-232 Signale (RX, TX,
RTS, CTS und GND) mit dem gleichen RS-232 Signalpegel bereit wie der D-Sub 9
Stecker. Um diesen Anschluss verwenden zu können müssen der RX1 und RX2 Pin der
Stiftleiste mit einem Jumper verbunden werden.

Stiftleiste
^^^^^^^^^^^

Die 5er Stiftleiste stellt die eingehende Daten (RX1) und ausgehende Daten (TX)
Signale mit 3,3V TTL Signalpegel bereit, sowie 3,3V und GND. Die Signale RTS
und CTS sind nicht verfügbar. Um diesen Anschluss verwenden zu können muss der
Jumper entfernt werden, der die RX1 und RX2 Pins der Stiftleiste verbindet. Der
Jumper kann seitlich auf dem RX2 Pin geparkt werden.


.. _rs232_bricklet_test:

Erster Test
-----------

|test_intro|

|test_connect|.
Verbinde dann den RX1 und TX Pin mit einem Jumper, damit das Bricklet seine
eigene Ausgabe zurück ließt.

|test_tab|
Wenn alles wie erwartet funktioniert kann jetzt Text in das Eingabefeld getippt
und mit Enter abgeschickt werden. Der gleiche Text sollte dann im Textfeld
darüber auftauchen.

.. image:: /Images/Bricklets/bricklet_rs232_brickv.jpg
   :scale: 100 %
   :alt: RS232 Bricklet im Brick Viewer
   :align: center
   :target: ../../_images/Bricklets/bricklet_rs232_brickv.jpg

|test_pi_ref|


.. _rs232_bricklet_case:

Gehäuse
-------

Ein `laser-geschnittenes Gehäuse für das RS232 Bricklet
<https://www.tinkerforge.com/de/shop/cases/case-rs232-bricklet.html>`__ ist verfügbar.

.. image:: /Images/Cases/bricklet_rs232_case_built_up1_350.jpg
   :scale: 100 %
   :alt: Gehäuse für RS232 Bricklet
   :align: center
   :target: ../../_images/Cases/bricklet_rs232_case_built_up1_1000.jpg

Der Aufbau ist am einfachsten wenn die folgenden Schritte befolgt werden:

* Schraube Abstandshalter an das Bricklet mit einer Unterlegscheibe an der
  Oberseite jeder Besfestigungsbohrung,
* schraube Oberteil auf obere Abstandshalter,
* baue Seitenteile auf,
* stecke zusammengebaute Seitenteile in Oberteil und
* schraube Unterteil an untere Abstandshalter.

Im Folgenden befindet sich eine Explosionszeichnung des RS232 Bricklet Gehäuses:

.. image:: /Images/Exploded/rs232_exploded_350.png
   :scale: 100 %
   :alt: Explosionszeichnung für RS232 Bricklet
   :align: center
   :target: ../../_images/Exploded/rs232_exploded.png

|bricklet_case_hint|


.. _rs232_bricklet_programming_interface:

Programmierschnittstelle
------------------------

Siehe :ref:`Programmierschnittstelle <programming_interface>` für eine detaillierte
Beschreibung.

.. include:: RS232_hlpi.table
