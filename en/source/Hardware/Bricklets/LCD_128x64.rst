
:shoplink: ../../../shop/bricklets/lcd-128x64-bricklet.html

.. include:: LCD_128x64.substitutions
   :start-after: >>>substitutions
   :end-before: <<<substitutions

.. _lcd_128x64_bricklet:

LCD 128x64 Bricklet
===================

.. raw:: html

	{% tfgallery %}

	Bricklets/bricklet_lcd_128x64_tilted_[?|?].jpg           LCD 128x64 Bricklet
	Bricklets/bricklet_lcd_128x64_active_[?|?].jpg           LCD 128x64 Bricklet
	Bricklets/bricklet_lcd_128x64_top_[?|?].jpg              LCD 128x64 Bricklet
	Bricklets/bricklet_lcd_128x64_bottom_[?|?].jpg           LCD 128x64 Bricklet
	Cases/bricklet_lcd_128x64_case_front_master_[?|?].jpg    LCD 128x64 Bricklet with case
	Cases/bricklet_lcd_128x64_case_back_master_[?|?].jpg     LCD 128x64 Bricklet with case
	Bricklets/bricklet_lcd_128x64_brickv_[100|].jpg          LCD 128x64 Bricklet in Brick Viewer
	Dimensions/lcd_128x64_bricklet_dimensions_[100|600].png  Outline and drilling plan

	{% tfgalleryend %}


Features
--------

* 7.1cm (2.8") LCD with a resolution of 128x64 pixel
* Embedded font for easy text drawing
* Touchscreen with x/y-coordinate and touch pressure callback
* Automatic swipe gesture recognition (left, right, up and down)


.. _lcd_128x64_bricklet_description:

Description
-----------

The LCD 128x64 :ref:`Bricklet <primer_bricklets>` is a LC Display with a resolution
of 128x64 pixel and resistive touchscreen.

Each pixel can be set individually, so the display can show graphics. This
allows for more versatile and detailed drawings on the display, compared to
the alphanumeric :ref:`LCD 20x4 Bricklet <lcd_20x4_bricklet>` with its fixed
character display. The screen size is very similar to the screen size of the
old LCD 20x4 Bricklet, so it can be used as a direct replacement.

Text can easily be drawn onto the display with the embedded
:ref:`font <lcd_128x64_bricklet_font>` of the Bricklet.

The touch screen has easy to use callbacks with x/y coordinates and touch
pressure. The Bricklet can automatically detect standard swipe gestures.

High update rates of up to 60Hz are possible.

The LCD 128x64 Bricklet has a 7 pole Bricklet connector and is connected to a
Brick with a ``7p-10p`` Bricklet cable.

.. raw:: html

	<video class="align-center" max-width="100%" width="100%" height="auto" controls autoplay loop>
	  <source src="../../_images/Videos/bricklet_lcd_128x64_video.mp4" type="video/mp4">
	  <source src="../../_images/Videos/bricklet_lcd_128x64_video.ogg" type="video/ogg">
	  <source src="../../_images/Videos/bricklet_lcd_128x64_video.webm" type="video/webm">
	</video>

.. raw:: html

	<video class="align-center" max-width="100%" width="100%" height="auto" controls autoplay loop>
	  <source src="../../_images/Videos/bricklet_air_quality_video.mp4" type="video/mp4">
	  <source src="../../_images/Videos/bricklet_air_quality_video.ogg" type="video/ogg">
	  <source src="../../_images/Videos/bricklet_air_quality_video.webm" type="video/webm">
	</video>

Technical Specifications
------------------------

================================  ============================================================
Property                          Value
================================  ============================================================
Current Consumption               | 40mW (8mA at 5V, backlight off)
                                  | 545mW (107mA at 5V, backlight at 100%)
--------------------------------  ------------------------------------------------------------
--------------------------------  ------------------------------------------------------------
Display Resolution                128x64 pixel, 26x8 characters
Display Size                      7.1cm (2.8")
Display Colors                    Black/White
--------------------------------  ------------------------------------------------------------
Touchscreen Type                  Resistive
Touchscreen Resolution            128x64
Touchscreen Pressure              0-300
--------------------------------  ------------------------------------------------------------
--------------------------------  ------------------------------------------------------------
Dimensions (W x D x H)            55 x 85 x 8mm (2.17 x 3.35 x 0.32")
Weight                            55g
================================  ============================================================


Resources
---------

* Schematic (`Download <https://github.com/Tinkerforge/lcd-128x64-bricklet/raw/master/hardware/lcd-128x64-schematic.pdf>`__)
* Outline and drilling plan (`Download <../../_images/Dimensions/lcd_128x64_bricklet_dimensions.png>`__)
* Source code and design files (`Download <https://github.com/Tinkerforge/lcd-128x64-bricklet/zipball/master>`__)
* 3D model (`View online <https://autode.sk/2K9hzsB>`__ | Download: `STEP <http://download.tinkerforge.com/3d/bricklets/lcd_128x64/lcd-128x64.step>`__, `FreeCAD <http://download.tinkerforge.com/3d/bricklets/lcd_128x64/lcd-128x64.FCStd>`__)


.. _lcd_128x64_bricklet_test:

Test your LCD 128x64 Bricklet
-----------------------------

|test_intro|

|test_connect|.

|test_tab|
If everything went as expected the Brick Viewer should look as
depicted below.

You can draw and write text to the display. With the slider it is
also possible to show the available character set on the LCD.

If you press with your finger or a stylus on the display you can see
a red circle at the press-position in Brick Viewer. The number
of circles corresponds to the touch pressure.

.. image:: /Images/Bricklets/bricklet_lcd_128x64_brickv.jpg
   :scale: 100 %
   :alt: LCD 128x64 Bricklet in Brick Viewer
   :align: center
   :target: ../../_images/Bricklets/bricklet_lcd_128x64_brickv.jpg

|test_pi_ref|


Usage
-----

To draw to the display we recommend that you use an image library that is
native to your programming language (for example PIL for Python). This
way you can use all of the available drawing primitives and fonts of the
library and then copy the image buffer to the Bricklet.

We provide examples for:

* `C/C++ <https://raw.githubusercontent.com/Tinkerforge/lcd-128x64-bricklet/master/software/examples/c/example_scribble.c>`__
  (with `libgd <https://libgd.github.io/>`__),
* `C# <https://raw.githubusercontent.com/Tinkerforge/lcd-128x64-bricklet/master/software/examples/csharp/ExampleScribble.cs>`__,
* `Java <https://raw.githubusercontent.com/Tinkerforge/lcd-128x64-bricklet/master/software/examples/java/ExampleScribble.java>`__,
* `JavaScript (Node.js) <https://raw.githubusercontent.com/Tinkerforge/lcd-128x64-bricklet/master/software/examples/javascript/ExampleScribble.js>`__
  (with `gm <https://www.npmjs.com/package/gm>`__ and `get-pixels <https://www.npmjs.com/package/get-pixels>`__),
* `Perl <https://raw.githubusercontent.com/Tinkerforge/lcd-128x64-bricklet/master/software/examples/perl/example_scribble.pl>`__
  (with `GD <http://search.cpan.org/~lds/GD-2.56/lib/GD.pm>`__),
* `PHP <https://raw.githubusercontent.com/Tinkerforge/lcd-128x64-bricklet/master/software/examples/php/ExampleScribble.php>`__
  (with `GD <http://php.net/manual/en/book.image.php>`__),
* `Python <https://raw.githubusercontent.com/Tinkerforge/lcd-128x64-bricklet/master/software/examples/python/example_scribble.py>`__
  (with `PIL <http://python-pillow.org/>`__),
* `Ruby <https://raw.githubusercontent.com/Tinkerforge/lcd-128x64-bricklet/master/software/examples/ruby/example_scribble.rb>`__
  (with `rgd <http://www.rubydoc.info/gems/rgd>`__) and
* `Visual Basic .NET <https://raw.githubusercontent.com/Tinkerforge/lcd-128x64-bricklet/master/software/examples/vbnet/ExampleScribble.vb>`__.


.. _lcd_128x64_bricklet_font:

Font
----

The Bricklet has an embedded font (ASCII subset in green) that allows fast and
easy text rendering (up to 26x8 characters):

.. image:: /Images/Bricklets/bricklet_lcd_128x64_font.png
   :scale: 100 %
   :alt: LCD 128x64 Bricklet font
   :align: center
   :target: ../../_images/Bricklets/bricklet_lcd_128x64_font.png


.. _lcd_128x64_bricklet_touchscreen:

Touchscreen
-----------

The Bricklet has a resistive touchscreen. This means that you may have to touch
with a little bit more pressure then you are used to with your smart phone, but
you can also use a stylus or similar instead of your finger.

With the API you can get the currently pressed x/y coordinate as well as the
touch pressure. You can use this for detection of "clicks" or gestures.

Some gestures (swipe left, right, up, down with the start- and end-position of
the swipe) are calculated by the Bricklet and can be received directly through
the API with callbacks.


.. _lcd_128x64_bricklet_case:

Case
----

A `laser-cut case for the LCD 128x64 Bricklet
<https://www.tinkerforge.com/en/shop/cases/case-lcd-128x64-bricklet.html>`__ is available.

.. image:: /Images/Cases/bricklet_lcd_128x64_case_front_350.jpg
   :scale: 100 %
   :alt: Case for LCD 128x64 Bricklet
   :align: center
   :target: ../../_images/Cases/bricklet_lcd_128x64_case_front_1000.jpg

The assembly is easiest if you follow the following steps:

* Screw front plate to Bricklet,
* build up side plates and bottom/back plate,
* screw front plate to side plates.
* Optional: Screw Master Brick to the back plate.

Below you can see an exploded assembly drawing of the LCD 128x64 Bricklet case:

.. image:: /Images/Exploded/lcd_128x64_exploded_350.png
   :scale: 100 %
   :alt: Exploded assembly drawing for LCD 128x64 Bricklet
   :align: center
   :target: ../../_images/Exploded/lcd_128x64_exploded.png

|bricklet_case_hint|


.. _lcd_128x64_bricklet_programming_interface:

Programming Interface
---------------------

See :ref:`Programming Interface <programming_interface>` for a detailed description.

.. include:: LCD_128x64_hlpi.table
