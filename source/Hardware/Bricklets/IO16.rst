.. _io16_bricklet:

IO16
====


.. raw:: html

	{% from "macros.html" import tfdocstart, tfdocimg, tfdocend %}
	{{ tfdocstart() }}
	{{ tfdocimg("Bricklets/test.jpg", "test_k.jpg", "Bricklets/test.jpg", "Title #0") }}
	{{ tfdocimg("Bricklets/test.jpg", "test_k.jpg", "Bricklets/test.jpg", "Title #1") }}
	{{ tfdocimg("Bricklets/test.jpg", "test_k.jpg", "Bricklets/test.jpg", "Title #2") }}
	{{ tfdocimg("Bricklets/test.jpg", "test_k.jpg", "Bricklets/test.jpg", "Title #3") }}
	{{ tfdocimg("Bricklets/test.jpg", "test_k.jpg", "Bricklets/test.jpg", "Title #4") }}
	{{ tfdocimg("Bricklets/test.jpg", "test_k.jpg", "Bricklets/test.jpg", "Title #5") }}
	{{ tfdocend() }}


Description
-----------

With the IO16 :ref:`Bricklet <product_overview_bricklets>` the features of
every :ref:`Brick <product_overview_bricks>` can be extended by external digital inputs 
and outputs.

The bricklet features 2x8 pins which can be independently configured as
digital inputs or outputs. Each input pin can additionally be configured with
pullups or as interrupt source. The input/output voltages can be switched manually
between 3.3V and 5V. Via terminal blocks all signals can be accessed and additional
GND signals can be accessed. A single terminal block deliver the switched output 
voltage. 

Human interfaces are typical applications of this bricklet since switches, push-bottons and
LEDs can be easily connected.

Technical Specifications
------------------------

================================  ============================================================
Property                          Value
================================  ============================================================
Dimensions                        75mm x 35mm (2.95" x 1.38")
Weight
--------------------------------  ------------------------------------------------------------
--------------------------------  ------------------------------------------------------------
Number of I/Os                    2x8
I/O voltages                      Switchable between 3.3V and 5V
Update frequency                  
================================  ============================================================

Resources
---------

* MCP23017 Datasheet (`Download <https://github.com/Tinkerforge/io16-bricklet/raw/master/datasheets/MCP23017.pdf>`__)
* Schematic (`Download <https://github.com/Tinkerforge/io16-bricklet/raw/master/hardware/io-16-schematic.pdf>`__)
* Outline and drilling plan (`Download <../../_images/Dimensions/io16_bricklet_dimensions.png>`__)
* Project (`Download <https://github.com/Tinkerforge/io16-bricklet/zipball/master>`__)
* `Kicad Project Page <http://kicad.sourceforge.net/>`__


.. _io16_bricklet_test:

Test your IO16 Bricklet
-----------------------

For a simple test connect your IO16 Bricklet to an arbitrary 
:ref:`Brick <product_overview_bricks>` over the supplied cable.
Connect an LED with series resistor to the board
by attaching the anode to port A pin 0 and the cathode to one GND pin.
Additonally connect a button which can short port B pin 0 to GND
(see picture below).

.. image:: /Images/Bricks/Servo_Brick/servo_brick_test.jpg
   :scale: 100 %
   :alt: Master Brick with connected IO16 Bricklet
   :align: center

After installing our software (Brickd, Brickv) you can see the connected IO16
Bricklet in the Brickv.

.. image:: /Images/Bricklets/io16_brickv.jpg
   :scale: 100 %
   :alt: Brickv view of the IO16 Bricklet
   :align: center

Click on the IO16 Bricklet tab. First you can change the "Debounce Period", 
it is the time in ms ... TODO
Below you can configure each pin as input/output and in case of an input pin 
the pullup option.
Simply choose a port and a pin configure the direction and value and press 
save. The current state is depicted in the tabular below.

For example lets test the LED. Configure port A pin 0 as output and change 
the value. When the pin is high the LED should light. To test the button 
configure port B pin 0 as input pullup. We need the pullup to define a stable
state when the button is not pressed. Now look in the tabular, you should
see that you can change the value of the pin by pressing the button.

After this you can go on with writing your own application.
See :ref:`Interface and Coding <io16_programming_interfaces>` section for the API of
the IO16 Bricklet and examples in your programming language.


.. _io16_programming_interfaces:

Programming Interfaces
----------------------

High Level Programming Interface
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

See :ref:`High Level Programming Interface <pi_hlpi>` for a detailed description.

.. csv-table::
   :header: "Language", "API", "Examples", "Installation"
   :widths: 25, 8, 15, 12

   "C/C++", ":ref:`API <io16_bricklet_c_api>`", ":ref:`Examples <io16_bricklet_c_examples>`", "Installation"
   "C#", ":ref:`API <io16_bricklet_csharp_api>`", ":ref:`Examples <io16_bricklet_csharp_examples>`", "Installation"
   "Java", ":ref:`API <io16_bricklet_java_api>`", ":ref:`Examples <io16_bricklet_java_examples>`", "Installation"
   "Python", ":ref:`API <io16_bricklet_python_api>`", ":ref:`Examples <io16_bricklet_python_examples>`", "Installation"

